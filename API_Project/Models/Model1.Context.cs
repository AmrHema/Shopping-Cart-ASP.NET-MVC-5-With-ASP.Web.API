//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace API_Project.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class leaderEntities_API : DbContext
    {
        public leaderEntities_API()
            : base("name=leaderEntities_API")
        {
            this.Configuration.LazyLoadingEnabled = false;
            this.Configuration.ProxyCreationEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Product> Products { get; set; }
    
        public virtual ObjectResult<Product> Products_SP_SelectAll_()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("Products_SP_SelectAll_");
        }
    
        public virtual ObjectResult<Product> Products_SP_SelectAll_(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("Products_SP_SelectAll_", mergeOption);
        }
    
        public virtual ObjectResult<Product> Products_sp_SelectByID(Nullable<int> product_id)
        {
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("Product_id", product_id) :
                new ObjectParameter("Product_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("Products_sp_SelectByID", product_idParameter);
        }
    
        public virtual ObjectResult<Product> Products_sp_SelectByID(Nullable<int> product_id, MergeOption mergeOption)
        {
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("Product_id", product_id) :
                new ObjectParameter("Product_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("Products_sp_SelectByID", mergeOption, product_idParameter);
        }
    
        public virtual ObjectResult<Product> Products_SP_Update(Nullable<int> cat_id, string product_Name, Nullable<decimal> product_Price, Nullable<int> product_QTY, string product_Description, string product_Image, Nullable<System.DateTime> product_Writing_Date, Nullable<int> product_id)
        {
            var cat_idParameter = cat_id.HasValue ?
                new ObjectParameter("Cat_id", cat_id) :
                new ObjectParameter("Cat_id", typeof(int));
    
            var product_NameParameter = product_Name != null ?
                new ObjectParameter("Product_Name", product_Name) :
                new ObjectParameter("Product_Name", typeof(string));
    
            var product_PriceParameter = product_Price.HasValue ?
                new ObjectParameter("Product_Price", product_Price) :
                new ObjectParameter("Product_Price", typeof(decimal));
    
            var product_QTYParameter = product_QTY.HasValue ?
                new ObjectParameter("Product_QTY", product_QTY) :
                new ObjectParameter("Product_QTY", typeof(int));
    
            var product_DescriptionParameter = product_Description != null ?
                new ObjectParameter("Product_Description", product_Description) :
                new ObjectParameter("Product_Description", typeof(string));
    
            var product_ImageParameter = product_Image != null ?
                new ObjectParameter("Product_Image", product_Image) :
                new ObjectParameter("Product_Image", typeof(string));
    
            var product_Writing_DateParameter = product_Writing_Date.HasValue ?
                new ObjectParameter("Product_Writing_Date", product_Writing_Date) :
                new ObjectParameter("Product_Writing_Date", typeof(System.DateTime));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("Product_id", product_id) :
                new ObjectParameter("Product_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("Products_SP_Update", cat_idParameter, product_NameParameter, product_PriceParameter, product_QTYParameter, product_DescriptionParameter, product_ImageParameter, product_Writing_DateParameter, product_idParameter);
        }
    
        public virtual ObjectResult<Product> Products_SP_Update(Nullable<int> cat_id, string product_Name, Nullable<decimal> product_Price, Nullable<int> product_QTY, string product_Description, string product_Image, Nullable<System.DateTime> product_Writing_Date, Nullable<int> product_id, MergeOption mergeOption)
        {
            var cat_idParameter = cat_id.HasValue ?
                new ObjectParameter("Cat_id", cat_id) :
                new ObjectParameter("Cat_id", typeof(int));
    
            var product_NameParameter = product_Name != null ?
                new ObjectParameter("Product_Name", product_Name) :
                new ObjectParameter("Product_Name", typeof(string));
    
            var product_PriceParameter = product_Price.HasValue ?
                new ObjectParameter("Product_Price", product_Price) :
                new ObjectParameter("Product_Price", typeof(decimal));
    
            var product_QTYParameter = product_QTY.HasValue ?
                new ObjectParameter("Product_QTY", product_QTY) :
                new ObjectParameter("Product_QTY", typeof(int));
    
            var product_DescriptionParameter = product_Description != null ?
                new ObjectParameter("Product_Description", product_Description) :
                new ObjectParameter("Product_Description", typeof(string));
    
            var product_ImageParameter = product_Image != null ?
                new ObjectParameter("Product_Image", product_Image) :
                new ObjectParameter("Product_Image", typeof(string));
    
            var product_Writing_DateParameter = product_Writing_Date.HasValue ?
                new ObjectParameter("Product_Writing_Date", product_Writing_Date) :
                new ObjectParameter("Product_Writing_Date", typeof(System.DateTime));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("Product_id", product_id) :
                new ObjectParameter("Product_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("Products_SP_Update", mergeOption, cat_idParameter, product_NameParameter, product_PriceParameter, product_QTYParameter, product_DescriptionParameter, product_ImageParameter, product_Writing_DateParameter, product_idParameter);
        }
    
        public virtual ObjectResult<Product> Products_SP_Insert(Nullable<int> cat_id, string product_Name, Nullable<decimal> product_Price, Nullable<int> product_QTY, string product_Description, string product_Image, Nullable<System.DateTime> product_Writing_Date)
        {
            var cat_idParameter = cat_id.HasValue ?
                new ObjectParameter("Cat_id", cat_id) :
                new ObjectParameter("Cat_id", typeof(int));
    
            var product_NameParameter = product_Name != null ?
                new ObjectParameter("Product_Name", product_Name) :
                new ObjectParameter("Product_Name", typeof(string));
    
            var product_PriceParameter = product_Price.HasValue ?
                new ObjectParameter("Product_Price", product_Price) :
                new ObjectParameter("Product_Price", typeof(decimal));
    
            var product_QTYParameter = product_QTY.HasValue ?
                new ObjectParameter("Product_QTY", product_QTY) :
                new ObjectParameter("Product_QTY", typeof(int));
    
            var product_DescriptionParameter = product_Description != null ?
                new ObjectParameter("Product_Description", product_Description) :
                new ObjectParameter("Product_Description", typeof(string));
    
            var product_ImageParameter = product_Image != null ?
                new ObjectParameter("Product_Image", product_Image) :
                new ObjectParameter("Product_Image", typeof(string));
    
            var product_Writing_DateParameter = product_Writing_Date.HasValue ?
                new ObjectParameter("Product_Writing_Date", product_Writing_Date) :
                new ObjectParameter("Product_Writing_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("Products_SP_Insert", cat_idParameter, product_NameParameter, product_PriceParameter, product_QTYParameter, product_DescriptionParameter, product_ImageParameter, product_Writing_DateParameter);
        }
    
        public virtual ObjectResult<Product> Products_SP_Insert(Nullable<int> cat_id, string product_Name, Nullable<decimal> product_Price, Nullable<int> product_QTY, string product_Description, string product_Image, Nullable<System.DateTime> product_Writing_Date, MergeOption mergeOption)
        {
            var cat_idParameter = cat_id.HasValue ?
                new ObjectParameter("Cat_id", cat_id) :
                new ObjectParameter("Cat_id", typeof(int));
    
            var product_NameParameter = product_Name != null ?
                new ObjectParameter("Product_Name", product_Name) :
                new ObjectParameter("Product_Name", typeof(string));
    
            var product_PriceParameter = product_Price.HasValue ?
                new ObjectParameter("Product_Price", product_Price) :
                new ObjectParameter("Product_Price", typeof(decimal));
    
            var product_QTYParameter = product_QTY.HasValue ?
                new ObjectParameter("Product_QTY", product_QTY) :
                new ObjectParameter("Product_QTY", typeof(int));
    
            var product_DescriptionParameter = product_Description != null ?
                new ObjectParameter("Product_Description", product_Description) :
                new ObjectParameter("Product_Description", typeof(string));
    
            var product_ImageParameter = product_Image != null ?
                new ObjectParameter("Product_Image", product_Image) :
                new ObjectParameter("Product_Image", typeof(string));
    
            var product_Writing_DateParameter = product_Writing_Date.HasValue ?
                new ObjectParameter("Product_Writing_Date", product_Writing_Date) :
                new ObjectParameter("Product_Writing_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("Products_SP_Insert", mergeOption, cat_idParameter, product_NameParameter, product_PriceParameter, product_QTYParameter, product_DescriptionParameter, product_ImageParameter, product_Writing_DateParameter);
        }
    
        public virtual ObjectResult<Product> Products_SP_DeletByProduct_id(Nullable<int> product_id)
        {
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("Product_id", product_id) :
                new ObjectParameter("Product_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("Products_SP_DeletByProduct_id", product_idParameter);
        }
    
        public virtual ObjectResult<Product> Products_SP_DeletByProduct_id(Nullable<int> product_id, MergeOption mergeOption)
        {
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("Product_id", product_id) :
                new ObjectParameter("Product_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("Products_SP_DeletByProduct_id", mergeOption, product_idParameter);
        }
    }
}
