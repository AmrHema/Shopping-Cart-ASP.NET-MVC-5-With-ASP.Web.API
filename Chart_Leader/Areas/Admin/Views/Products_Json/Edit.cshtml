


@model Chart_Leader.Models.ProductsViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <!-- Breadcrumbs-->
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.Action("Dashboard", "Admin",new { area = "Admin"})">Dashboard</a>
        </li>
        <li class="breadcrumb-item "><a href="@Url.Action("AllProducts", "Products",new { area = "Admin"})">Products</a></li>
        <li class="breadcrumb-item active">Edit Product</li>
    </ol>
    <!-- DataTables Example -->
    <div class="card mb-3">
        <div class="card-header">
            <i class="fas fa-table"></i>
            Products Details
            <a href="@Url.Action("AddProduct", "Products",new { area = "Admin"})" class="btn btn-primary pull-right" style="color:#ffffff"><i class="fas fa-plus-circle"></i> Add New</a>
        </div>
        <div class="card-body">
            <div class="table-responsive">

                @using (Html.BeginForm("Edit", "Products_Json", new { area = "" }, FormMethod.Post, new { onsubmit = "return SubmitForm(this)", id = "frmsubmit" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>ProductsViewModel</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Cat_id, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("Cat_id", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Cat_id, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Product_id, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Product_id, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product_id, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Product_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Product_Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product_Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Product_Price, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Product_Price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product_Price, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Product_QTY, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Product_QTY, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product_QTY, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Product_Writing_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Product_Writing_Date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product_Writing_Date, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group">
                            @Html.LabelFor(model => model.Product_Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Product_Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product_Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Product_Image, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <img class="img-thumbnail" src="@Url.Content(Model.Product_Image)" alter="Image" style="margin:10px ;height:200px; width:200px" id="imagePreview" />
                                <input type="file" name="ImageUpload" accept="image/jpeg, image/png" onchange="ShowImagePreview(this,document.getElementById('imagePreview'))" />
                                @Html.ValidationMessage("Product_Image", "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-3 col-md-9">
                                <input type="submit" value="Save" @*data-dismiss="modal"*@ class="btn btn-primary" />
                                <input type="reset" value="Close" data-dismiss="modal" class="btn btn-danger" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <a onclick="window.history.back();" class="btn btn-primary" style="color:#ffffff"><i class="fa fa-arrow-alt-circle-left"></i> Cancel</a>
                                <button type="submit" class="btn btn-danger"> <i class="fa fa-pen-nib"></i> Update</button>
                            </div>
                        </div>
                    </div>
                }




            </div>
        </div>
        <div class="card-footer small text-muted">Updated yesterday at 11:59 PM</div>
    </div>
    <p class="small text-center text-muted my-5">
        <em>More table examples coming soon...</em>
    </p>
</div>
<!-- /.container-fluid -->
